{"version":3,"sources":["components/atoms/NavItem/NavItem.tsx","components/atoms/Logo/default-logo.svg","components/atoms/Logo/Logo.tsx","components/molecules/Nav/NavBrand.tsx","components/molecules/Nav/NavMenu.tsx","components/organisms/Navbar.tsx","components/atoms/Card/Card.tsx","components/atoms/TextField/TextField.tsx","components/molecules/Create/CreateContent.tsx","components/molecules/Create/Create.tsx","components/atoms/Checkbox/Checkbox.tsx","components/atoms/Badge/Badge.tsx","components/molecules/Filter/FilterContent.tsx","components/molecules/Filter/Filters.tsx","components/organisms/Sidebar.tsx","components/atoms/Button/Button.tsx","components/atoms/Label/Label.tsx","components/molecules/TodoList/TodoItem.tsx","components/molecules/TodoList/TodoList.tsx","components/organisms/MainContent.tsx","components/templates/Dashboard.tsx","App.tsx","containers/Workspace.ts","reportWebVitals.ts","store/reducers/todosReducer.ts","store/store.ts","index.tsx"],"names":["NavItem","href","children","className","clickHandler","onClick","Logo","url","src","defaultLogo","alt","NavBrand","brandLogo","NavMenu","activeTab","setActiveTabClick","e","Navbar","useState","activeName","setActiveName","role","aria-label","name","console","log","Card","title","TextField","value","placeholder","onChange","type","CreateContent","createCompState","setCreateCompState","createTextChange","todoName","currentTarget","prevState","Create","itemTitle","txtVal","Checkbox","checked","Badge","FilterContent","filterCompState","setFilterCompState","filterTextChange","filterOnlyActiveOnes","activeTodo","Filters","filterCompInitialState","checkVal","Sidebar","Button","dataVal","id","Label","TodoItem","item","TodoList","todosCollection","data","todos","map","todoItem","index","length","MainContent","Dashboard","App","compose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","combineReducers","state","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c684ac02.chunk.js","sourcesContent":["import React, { FC, ReactNode, MouseEvent } from \"react\";\n\ninterface NavItemProps {\n    href?: string;\n    className?: string;\n    children?: ReactNode;\n    clickHandler?: (e: MouseEvent<HTMLAnchorElement>) => void;\n}\n\nconst NavItem: FC<NavItemProps> = ({ href, children, className, clickHandler }) => {\n    return (\n        <a className={`navbar-item ${className || \"\"}`} href={href || \"#\"} onClick={clickHandler}>\n            {children}\n        </a>\n    );\n};\n\nexport default NavItem;\n","export default __webpack_public_path__ + \"static/media/default-logo.103b5fa1.svg\";","import React, { FC } from \"react\";\nimport defaultLogo from \"./default-logo.svg\";\nimport \"./Logo.css\";\n\ninterface LogoProps {\n    url?: string;\n}\n\nconst Logo: FC<LogoProps> = ({ url }) => {\n    return <img className=\"logo-img\" src={url || defaultLogo} alt=\"logo-img\" />;\n};\n\nexport default Logo;\n","import React, { FC } from \"react\";\nimport NavItem from \"../../atoms/NavItem/NavItem\";\nimport Logo from \"../../atoms/Logo/Logo\";\ninterface NavBrandProps {\n    brandLogo?: string;\n}\n\nconst NavBrand: FC<NavBrandProps> = ({ brandLogo }) => {\n    return (\n        <div className=\"navbar-brand\">\n            <NavItem href=\"#\">\n                <Logo url={brandLogo} />\n            </NavItem>\n        </div>\n    );\n};\n\nexport default NavBrand;\n","import React, { FC, MouseEvent } from \"react\";\nimport NavItem from \"../../atoms/NavItem/NavItem\";\ninterface NavMenuProps {\n    activeTab?: string;\n    setActiveTabClick: (e: MouseEvent<HTMLAnchorElement>, name: string) => void;\n}\n\nconst NavMenu: FC<NavMenuProps> = ({ activeTab, setActiveTabClick }) => {\n    return (\n        <div className=\"navbar-menu\">\n            <div className=\"navbar-end\">\n                <NavItem\n                    className={`${activeTab === \"all\" ? \"is-active\" : \"\"}`}\n                    clickHandler={(e: MouseEvent<HTMLAnchorElement>) => setActiveTabClick(e, \"all\")}\n                >\n                    All Todos\n                </NavItem>\n                <NavItem\n                    className={`${activeTab === \"mylist\" ? \"is-active\" : \"\"}`}\n                    clickHandler={(e: MouseEvent<HTMLAnchorElement>) => setActiveTabClick(e, \"mylist\")}\n                >\n                    My Todo list\n                </NavItem>\n            </div>\n        </div>\n    );\n};\n\nexport default NavMenu;\n","import React, { FC, MouseEvent, useState } from \"react\";\n\nimport NavBrand from \"../molecules/Nav/NavBrand\";\nimport NavMenu from \"../molecules/Nav/NavMenu\";\n\nimport \"./Navbar.css\";\n\nconst Navbar: FC = () => {\n    const [activeName, setActiveName] = useState(\"all\");\n    const setActiveTabClick = (e: MouseEvent<HTMLAnchorElement>, name: string) => {\n        console.log(\"Active menu name \", name);\n        setActiveName(name);\n    };\n\n    return (\n        <header>\n            <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n                <NavBrand />\n                <NavMenu activeTab={activeName} setActiveTabClick={setActiveTabClick} />\n            </nav>\n        </header>\n    );\n};\n\nexport default Navbar;\n","import React, { FC, ReactNode } from \"react\";\nimport \"./Card.css\";\ninterface CardProps {\n    title?: string;\n    children?: ReactNode;\n}\n\nconst Card: FC<CardProps> = ({ title, children }) => {\n    const renderCardTitle = () => (\n        <div className=\"card-header\">\n            <p className=\"card-header-title\">\n                <span>{title || \"\"}</span>\n            </p>\n        </div>\n    );\n    return (\n        <div className=\"card\">\n            {title ? renderCardTitle() : \"\"}\n            <div className=\"card-content\">{children}</div>\n        </div>\n    );\n};\n\nexport default Card;\n","import React, { FC, FormEvent } from \"react\";\nimport \"./TextField.css\";\ninterface TextFieldProps {\n    name?: string;\n    value?: string;\n    className?: string;\n    placeholder?: string;\n    onChange?: (e: FormEvent<HTMLInputElement>) => void;\n}\n\nconst TextField: FC<TextFieldProps> = ({ name, value, className, placeholder, onChange }) => {\n    return (\n        <input\n            type=\"text\"\n            className={`input ${className || \"\"}`}\n            placeholder={placeholder || \"\"}\n            name={name}\n            value={value}\n            onChange={onChange}\n        />\n    );\n};\n\nexport default TextField;\n","import React, { FC, FormEvent } from \"react\";\n\nimport TextField from \"../../atoms/TextField/TextField\";\n\ninterface CreateContentProps {\n    createCompState: any;\n    setCreateCompState: any;\n    createTextChange: (txtVal: string) => void;\n}\n\nconst CreateContent: FC<CreateContentProps> = ({ createCompState, setCreateCompState, createTextChange }) => {\n    const { todoName } = createCompState;\n\n    const nameInputChangeHandler = (e: FormEvent<HTMLInputElement>) => {\n        const { name, value } = e.currentTarget;\n        setCreateCompState((prevState: object) => ({ ...prevState, [name]: value }));\n        // trigger to update store\n        createTextChange(value);\n    };\n\n    return (\n        <div>\n            <form>\n                <div className=\"field\">\n                    <TextField\n                        name=\"todoName\"\n                        placeholder=\"Todo Name\"\n                        value={todoName}\n                        onChange={nameInputChangeHandler}\n                    />\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default CreateContent;\n","import React, { FC, useState } from \"react\";\nimport Card from \"../../atoms/Card/Card\";\nimport CreateContent from \"./CreateContent\";\n\nconst Create: FC = () => {\n    const createCompInitialState = {\n        itemTitle: \"\",\n    };\n\n    const [createCompState, setCreateCompState] = useState(createCompInitialState);\n\n    const createTextChange = (txtVal: string) => {\n        setCreateCompState({ itemTitle: txtVal });\n    };\n\n    return (\n        <Card title=\"Create Todo Items\">\n            <p>Hello world</p>\n            <CreateContent\n                createCompState={createCompState}\n                setCreateCompState={setCreateCompState}\n                createTextChange={createTextChange}\n            />\n        </Card>\n    );\n};\n\nexport default Create;\n","import React, { FC, FormEvent } from \"react\";\nimport \"./Checkbox.css\";\ninterface CheckboxProps {\n    name?: string;\n    checked?: boolean;\n    className?: string;\n    onChange?: (e: FormEvent<HTMLInputElement>) => void; // function type\n}\n\nconst Checkbox: FC<CheckboxProps> = ({ name, checked, className, onChange }) => {\n    return <input type=\"checkbox\" className={`${className || \"\"}`} name={name} checked={checked} onChange={onChange} />;\n};\n\nexport default Checkbox;\n","import React, { FC } from \"react\";\nimport \"./Badge.css\";\ninterface BadgeProps {\n    title?: string;\n}\n\nconst Badge: FC<BadgeProps> = ({ title }) => {\n    return <span className=\"badge\">{title || \"\"}</span>;\n};\n\nexport default Badge;\n","import React, { FC, FormEvent } from \"react\";\n\nimport TextField from \"../../atoms/TextField/TextField\";\nimport Checkbox from \"../../atoms/Checkbox/Checkbox\";\nimport Badge from \"../../atoms/Badge/Badge\";\n\ninterface FilterContentProps {\n    filterCompState: any;\n    setFilterCompState: any;\n    filterTextChange: (txtVal: string) => void;\n    filterOnlyActiveOnes: (checkVal: boolean) => void;\n}\n\nconst FilterContent: FC<FilterContentProps> = ({\n    filterCompState,\n    setFilterCompState,\n    filterTextChange,\n    filterOnlyActiveOnes,\n}) => {\n    const { todoName, activeTodo } = filterCompState;\n\n    const nameInputChangeHandler = (e: FormEvent<HTMLInputElement>) => {\n        const { name, value } = e.currentTarget;\n        setFilterCompState((prevState: object) => ({ ...prevState, [name]: value }));\n        // trigger to update store\n        filterTextChange(value);\n    };\n\n    const onlyActiveChangeHandler = (e: FormEvent<HTMLInputElement>) => {\n        const { name, checked } = e.currentTarget;\n        setFilterCompState((prevState: object) => ({ ...prevState, [name]: checked }));\n        // trigger to update store\n        filterOnlyActiveOnes(checked);\n    };\n\n    return (\n        <div>\n            <form>\n                <div className=\"field\">\n                    <TextField\n                        name=\"todoName\"\n                        placeholder=\"Todo Item Name to filter\"\n                        value={todoName}\n                        onChange={nameInputChangeHandler}\n                    />\n                </div>\n                <div className=\"field active-check-container\">\n                    <label className=\"checkbox\">\n                        <Checkbox name=\"activeTodo\" checked={activeTodo} onChange={onlyActiveChangeHandler} /> Only{\" \"}\n                        <Badge title=\"Active\" />\n                    </label>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default FilterContent;\n","import React, { FC, useState, MouseEvent } from \"react\";\nimport Card from \"../../atoms/Card/Card\";\nimport FilterContent from \"./FilterContent\";\n\nconst Filters: FC = () => {\n    const filterCompInitialState = {\n        todoName: \"\",\n        activeTodo: false,\n    };\n\n    const [filterCompState, setFilterCompState] = useState(filterCompInitialState);\n\n    const filterTextChange = (txtVal: string) => {\n        // setFilterCompState({ ...activeTodo, {todoName: txtVal} });\n    };\n\n    const filterOnlyActiveOnes = (checkVal: boolean) => {\n        // setFilterCompState(checkVal);\n    };\n\n    const clickClearHandler = (e: MouseEvent<HTMLAnchorElement>) => {\n        e.preventDefault();\n        setFilterCompState({ ...filterCompInitialState });\n    };\n\n    return (\n        <Card title=\"Filter by\">\n            {/* <FilterHead title=\"Filter by\" clickClearHandler={clickClearHandler} /> */}\n            <FilterContent\n                filterCompState={filterCompState}\n                setFilterCompState={setFilterCompState}\n                filterTextChange={filterTextChange}\n                filterOnlyActiveOnes={filterOnlyActiveOnes}\n            />\n        </Card>\n    );\n};\n\nexport default Filters;\n","import React, { FC } from \"react\";\nimport Create from \"../molecules/Create/Create\";\nimport Filters from \"../molecules/Filter/Filters\";\n\nconst Sidebar: FC = () => {\n    return (\n        <div className=\"side-bar\">\n            <Create />\n            <Filters />\n        </div>\n    );\n};\n\nexport default Sidebar;\n","import React, { FC, MouseEvent } from \"react\";\nimport \"./Button.css\";\ninterface ButtonProps {\n    title?: string;\n    dataVal?: string;\n    className?: string;\n    onClick?: MouseEvent<HTMLAnchorElement> | any;\n}\n\nconst Button: FC<ButtonProps> = ({ title, onClick, dataVal, className }) => {\n    return (\n        <a role=\"button\" className={`button ${className || \"\"}`} onClick={onClick} id={dataVal}>\n            {title || \"\"}\n        </a>\n    );\n};\n\nexport default Button;\n","import React, { FC, ReactNode } from \"react\";\n\ninterface LabelProps {\n    className?: string;\n    children?: ReactNode;\n}\n\nconst Label: FC<LabelProps> = ({ className, children }) => {\n    return <span className={className}>{children}</span>;\n};\n\nexport default Label;\n","import React, { FC, FormEvent } from \"react\";\nimport Card from \"../../atoms/Card/Card\";\nimport Button from \"../../atoms/Button/Button\";\nimport Label from \"../../atoms/Label/Label\";\n\nimport \"./TodoItem.css\";\n\ninterface TodoItemProps {\n    item: any;\n}\n\nconst TodoItem: FC<TodoItemProps> = ({ item }) => {\n    return (\n        <Card>\n            <div className=\"box\">\n                <div className=\"box-item\">\n                    <p>\n                        <Label className=\"box-item-head\">{item?.name}</Label>\n                    </p>\n                    <Button\n                        title={\"Select it\"}\n                        onClick={(e: FormEvent<HTMLAnchorElement>) => {\n                            console.log(\"clicked to select\");\n                        }}\n                    />\n                </div>\n                <div className=\"box-item\">\n                    <p> Other details</p>\n                </div>\n            </div>\n        </Card>\n    );\n};\n\nexport default TodoItem;\n","import React, { FC } from \"react\";\n\nimport TodoItem from \"./TodoItem\";\n\ninterface TodoListProps {\n    data: any;\n}\n\nconst TodoList: FC<TodoListProps> = ({ data }) => {\n    const { todos } = data;\n    const todosCollection = todos.map((todoItem: any, index: number) => [\n        <TodoItem key={todoItem?.id} item={todoItem} />,\n    ]);\n\n    return <section>{todosCollection.length === 0 ? \"No todos available\" : todosCollection}</section>;\n};\n\nexport default TodoList;\n","import React, { FC } from \"react\";\nimport TodoList from \"../molecules/TodoList/TodoList\";\n\nconst MainContent: FC = () => {\n    const todosData = { todos: [{ id: 1, name: \"One\" }] };\n\n    return (\n        <div className=\"main-contents\">\n            <TodoList data={todosData} />\n        </div>\n    );\n};\n\nexport default MainContent;\n","import React, { FC } from \"react\";\nimport Navbar from \"../organisms/Navbar\";\nimport Sidebar from \"../organisms/Sidebar\";\nimport MainContent from \"../organisms/MainContent\";\nimport \"./Dashboard.css\";\n\nconst Dashboard: FC = () => {\n    return (\n        <div>\n            <Navbar />\n            <div className=\"dashboard-contents\">\n                <Sidebar />\n                <MainContent />\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport Dashboard from \"./components/templates/Dashboard\";\nimport \"./App.css\";\n\nfunction App() {\n    return (\n        <div className=\"app-container\">\n            <Dashboard />\n        </div>\n    );\n}\n\nexport default App;\n","import App from \"../App\";\nimport { compose } from \"redux\";\n\nexport default compose()(App);\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","const initialState = {};\n\nexport const todosReducer = (state: any = initialState, action: any) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};\n","import { createStore, combineReducers } from \"redux\";\nimport { todosReducer } from \"./reducers\";\n\nconst reducers = combineReducers({\n    todos: todosReducer,\n});\n\nexport const store = createStore(reducers);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/Workspace\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}